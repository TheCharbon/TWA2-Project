# File for CI/CD Pipeline
stages: # declaration & order/organization
  - install
  - lint
  - documentation
  - test
  - build
  - deploy

cache:
  paths:
    - server/node_modules/
    - client/node_modules/
    - client/build/
    - server/full.zip

install-fe:
  stage: install
  script:
    - cd client
    - npm install

install-be:
  stage: install
  script:
    - cd server
    - npm install
    - echo $env:AWS_ACCESS_KEY_ID
    - echo $env:AWS_SECRET_ACCESS_KEY
    - echo $env:AWS_SESSION_TOKEN
    - echo $env:BUCKET_NAME
    - echo $env:APPLICATION_NAME
    - echo $env:ENVIRONMENT_NAME

# lint-job:
#   stage: lint
#   script:
#     - cd server
#     - npx eslint .

# test-1-job:
#   stage: test
#   script:
#   - cd server
#   - npx concurrently --kill-others-on-fail --kill-others --success first "npm start" "npx mocha --reporter mocha-junit-reporter --reporter-options mochaFile=./test/res/test_results.xml"
#   artifacts:
#     paths:
#       - test/res/test_results.xml
  
# doc-job:
#   stage: documentation
#   script:
#   - cd server
#   - npm run api_doc
#   artifacts:
#     paths:
#       - documentation/out/index.html
      
build-job:
  stage: build
  script:
    - cd client/
    - npm run build
    - if (Test-Path ../server/react_build) {Remove-Item -Recurse -Force ../server/react_build}
    - cp -r build/ ../server/react_build
    - Remove-Item -Recurse -Force build/
    - cd ../server
    - if (Test-Path full.zip) {Remove-Item -Force full.zip}
    - &"C:\Program Files\7-Zip\7z.exe" a -tzip full.zip . -xr!node_modules
    - echo "preparations completed"
  artifacts:
    paths:
      - client/build/

deploy-job:
  stage: deploy
  script:
  - aws s3 cp server/full.zip s3://$env:BUCKET_NAME/full.zip
  - $VERSION_LABEL = "v$(Get-Date -Format 'yyyyMMddHHmmss')"
  - echo "new version label $VERSION_LABEL"
  - aws elasticbeanstalk create-application-version --application-name $env:APPLICATION_NAME --version-label $VERSION_LABEL --source-bundle S3Bucket=snappy-chat-zip,S3Key=full.zip --no-cli-pager
  - aws elasticbeanstalk update-environment --environment-name $env:ENVIRONMENT_NAME --version-label $VERSION_LABEL --no-cli-pager
  - echo "Deploy completed"