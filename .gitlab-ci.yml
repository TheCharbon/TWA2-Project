# File for CI/CD Pipeline
stages: # declaration & order/organization
  - install
  - lint
  - documentation
  - test
  - build
  - deploy

cache:
  paths:
    - server/node_modules/
    - client/node_modules/
#    - client/build/

install-be:
  stage: install
  script:
    - cd client
    - npm install

install-fe:
  stage: install
  script:
    - cd server
    - npm install

lint-job:
  stage: lint
  script:
    - cd server
    - npx eslint .

test-1-job:
  stage: test
  script:
  - cd server
  - npx concurrently --kill-others-on-fail --kill-others --success first "npm start" "npx mocha --reporter mocha-junit-reporter --reporter-options mochaFile=./test/res/test_results.xml"
  artifacts:
    paths:
      - test/res/test_results.xml
  
doc-job:
  stage: documentation
  script:
  - cd server
  - npm run api_doc
  artifacts:
    paths:
      - documentation/out/index.html
build-job:
  stage: build
  script:
    - cd ../client/
    #- npm install
    - npm run build
    - rm -rf ../server/react_build || true
    - cp -r build/ ../server/react_build
    - rm -rf build/
    - cd ../server
    - rm full.zip || true
    - 7z a -tzip full.zip . -xr!node_modules
    - echo "preparations completed"
  artifacts:
    paths:
      - client/build/

deploy-job:
  stage: deploy
  script:
  - aws s3 cp ../server/full.zip s3://snappy-chat-zip/full.zip
  - VERSION_LABEL="v$(date +%Y%m%d%H%M%S)"
  - echo "new version label $VERSION_LABEL"
  - aws elasticbeanstalk create-application-version --application-name chat-application --version-label $VERSION_LABEL --source-bundle S3Bucket=snappy-chat-zip,S3Key=full.zip --no-cli-pager
  - aws elasticbeanstalk update-environment --environment-name Chat-application-env --version-label $VERSION_LABEL --no-cli-pager
  - echo "Deploy completed"